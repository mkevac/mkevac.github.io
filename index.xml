<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Marko Kevac Home</title>
    <link>http://marko.kevac.org/</link>
    <description>Recent content on Marko Kevac Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Feb 2021 20:57:14 +0300</lastBuildDate><atom:link href="http://marko.kevac.org/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to switch from email to RSS for YouTube subscriptions</title>
      <link>http://marko.kevac.org/posts/youtube-rss/</link>
      <pubDate>Thu, 04 Feb 2021 20:57:14 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/youtube-rss/</guid>
      <description>Some time ago YouTube removed the option of receiving new videos from channels that you are subscribed to via email. I loved using email because it was easy to sift through new videos, delete those that are not interested and leave unread those that I want to watch a bit later.
Unfortunately, I had to start using the YouTube web interface. A Major drawback of using web interface is that you have to check Subscriptions page often (once every few days) or you would lose the threshold between what you already saw and what you did not see.</description>
    </item>
    
    <item>
      <title>Encrypted DNS</title>
      <link>http://marko.kevac.org/posts/encrypted-dns/</link>
      <pubDate>Thu, 02 Jan 2020 16:44:49 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/encrypted-dns/</guid>
      <description>This is a bunch of notes taken from “DNS over HTTPS considerations” by Bert Hubert.
It’s an amazing talk and I recommend watching it. It covers the history of DNS security, privacy considerations, state-of-the-art and what awaits us in the future.
 DNS is one of the oldest text protocols that are still widely used. Almost everything else we encrypted already.
There have been four tries to encrypt DNS:</description>
    </item>
    
    <item>
      <title>New Blog (Hello World)</title>
      <link>http://marko.kevac.org/posts/new-blog/</link>
      <pubDate>Sun, 29 Dec 2019 00:31:40 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/new-blog/</guid>
      <description>I&amp;rsquo;ve decided to rekindle my blog as my New Year&amp;rsquo;s resolution. I am going to leave Google&amp;rsquo;s Blogger behind and switch to a static site generated by Hugo. You are reading a first post in a new blog. Welcome!</description>
    </item>
    
    <item>
      <title>ssh_exchange_identification connection reset by peer problem</title>
      <link>http://marko.kevac.org/posts/ssh-exchange-identification/</link>
      <pubDate>Thu, 22 Sep 2016 14:08:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/ssh-exchange-identification/</guid>
      <description>At Badoo we have a distributed system that uses ssh on start to connect to each node and exchange some data.
Sometimes I&amp;rsquo;ve seen ssh fail with error
ssh_exchange_identification: read: Connection reset by peer error Usually, If you see this error, it means that server didn&amp;rsquo;t like your certificate or you were banned from accessing this server.
The best way to debug this problem is to append -vvv while executing ssh client to increase verbosity and to do the same on server.</description>
    </item>
    
    <item>
      <title>Memory Mappings Limit</title>
      <link>http://marko.kevac.org/posts/memory-mappings-limit/</link>
      <pubDate>Sun, 12 Jun 2016 18:30:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/memory-mappings-limit/</guid>
      <description>We have some very strange memory corruption problem in one of our daemons. As one of the many approaches to find the bug, we have built and pushed to production this daemon, but without jemalloc, memory allocator library that we use in all our projects.
Few hours after the release monitoring team reported an unusal amount of errors returned from the system. It happens that few percent of the requests returned &amp;ldquo;out of memory&amp;rdquo; error.</description>
    </item>
    
    <item>
      <title>Perf and Stack Traces</title>
      <link>http://marko.kevac.org/posts/perf-and-stack-traces/</link>
      <pubDate>Thu, 19 Jun 2014 12:33:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/perf-and-stack-traces/</guid>
      <description>I was wondering why perf record -g don&amp;rsquo;t show proper stack traces for my programs in production environment. First I thought that kernel was too old, but after performing few experiments I have found out that it wasn&amp;rsquo;t the case. Problem was that when you compile with optimizations (-O3), gcc automatically omits frame pointers. And it is not easy to unwind stack traces without frame pointers. But gcc can do it somehow.</description>
    </item>
    
    <item>
      <title>Who&#39;s Calling</title>
      <link>http://marko.kevac.org/posts/whos-calling/</link>
      <pubDate>Fri, 02 May 2014 11:15:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/whos-calling/</guid>
      <description>Sometimes your program uses a lot of system time. Let&amp;rsquo;s say 90%. You fire up your favorite profiling tool and it tells you which system call it is. If you are experiences and maybe lucky, you can say straight away which part of your program is to blame. But it&amp;rsquo;s not always so obvious.
GDB comes to the rescue. You can use catch syscall &amp;lt;syscall&amp;gt; and it will break when particular syscall is called.</description>
    </item>
    
    <item>
      <title>Perf on Latest Linux Kernel</title>
      <link>http://marko.kevac.org/posts/perf-on-latest-linux-kernel/</link>
      <pubDate>Fri, 02 May 2014 10:05:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/perf-on-latest-linux-kernel/</guid>
      <description>I have being playing today with perf on latest available kernel in Fedora (3.13). These are just some observations and thoughts.
perf trace This tool is similar to strace, but almost without overhead. Contrary to strace, you can use perf trace to watch syscalls system wide or system calls generated by processes owned by certain user.
perf top Function names are shown correctly and -g parameter is now available. It means that you can get call traces in a real time (without perf record).</description>
    </item>
    
    <item>
      <title>Uninterruptible Sleep</title>
      <link>http://marko.kevac.org/posts/uninterruptible-sleep/</link>
      <pubDate>Sat, 02 Feb 2013 10:07:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/uninterruptible-sleep/</guid>
      <description>Sometimes you will see processes on your linux box that are in D state as shown by ps, top, htop or similar. D means uninterruptible sleep. As opposed to normal sleep, you can&amp;rsquo;t do anything with these processes (i.e. kill them). Additional information could be found on LWN.
Usually this means that process is stuck reading or writing something to disk or NFS and remote site does not answer. But not always.</description>
    </item>
    
    <item>
      <title>Searching for a position of set bits in a variable</title>
      <link>http://marko.kevac.org/posts/searching-for-a-position/</link>
      <pubDate>Sat, 30 Jun 2012 10:07:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/searching-for-a-position/</guid>
      <description>In a deamon that I have created in Badoo I need to search for a positions of a bits in a 32 bit variable. The simplest solution is to look at each bit, but there is a faster solution using GCC built in function __builtin_ctzl:
 Returns the number of trailing 0-bits in x, starting at the least significant bit position. If x is 0, the result is undefined.
 So I wrote test to compare speed of these two approaches:</description>
    </item>
    
  </channel>
</rss>
