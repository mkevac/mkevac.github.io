<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>perf on Marko Kevac Home</title>
    <link>http://marko.kevac.org/tags/perf/</link>
    <description>Recent content in perf on Marko Kevac Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 19 Jun 2014 12:33:00 +0300</lastBuildDate>
    
	<atom:link href="http://marko.kevac.org/tags/perf/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Perf and Stack Traces</title>
      <link>http://marko.kevac.org/posts/perf-and-stack-traces/</link>
      <pubDate>Thu, 19 Jun 2014 12:33:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/perf-and-stack-traces/</guid>
      <description>I was wondering why perf record -g don&#39;t show proper stack traces for my programs in production environment. First I thought that kernel was too old, but after performing few experiments I have found out that it wasn&#39;t the case. Problem was that when you compile with optimizations (-O3), gcc automatically omits frame pointers. And it is not easy to unwind stack traces without frame pointers. But gcc can do it somehow.</description>
    </item>
    
    <item>
      <title>Perf on Latest Linux Kernel</title>
      <link>http://marko.kevac.org/posts/perf-on-latest-linux-kernel/</link>
      <pubDate>Fri, 02 May 2014 10:05:00 +0300</pubDate>
      
      <guid>http://marko.kevac.org/posts/perf-on-latest-linux-kernel/</guid>
      <description>I have being playing today with perf on latest available kernel in Fedora (3.13). These are just some observations and thoughts.
perf trace This tool is similar to strace, but almost without overhead. Contrary to strace, you can use perf trace to watch syscalls system wide or system calls generated by processes owned by certain user.
perf top Function names are shown correctly and -g parameter is now available. It means that you can get call traces in a real time (without perf record).</description>
    </item>
    
  </channel>
</rss>